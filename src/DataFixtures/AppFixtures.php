<?php

namespace App\DataFixtures;

use App\Entity\User;
use App\Entity\Article;
use App\Entity\Tag;
use App\Entity\Comment;
use Doctrine\Bundle\FixturesBundle\Fixture;
use Doctrine\Persistence\ObjectManager;
use Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface;

class AppFixtures extends Fixture
{
    public function __construct(UserPasswordHasherInterface $passwordhasher){
        $this->passwordHasher = $passwordhasher;
    }

    public function load(ObjectManager $manager): void
    {
        // USERS
        $users = [
            [
                "nickname" => "Toto",
                "email" => "toto@toto.fr",
                "password" => "toto",
                "roles" => ["ROLE_ADMIN"]
            ],
            [
                "nickname" => "Tata",
                "email" => "tata@tata.fr",
                "password" => "tata",
                "roles" => []
            ],
            [
                "nickname" => "Dave the dev",
                "email" => "super-dave@gmail.com",
                "password" => "dave",
                "roles" => []
            ]
        ];

        $user_objects = [];
        foreach ($users as $user) {
            $new_user = new User;
            $new_user->setNickname($user["nickname"]);
            $new_user->setEmail($user["email"]);
            $plaintextPassword = $user["password"];
            $new_user->setRoles($user["roles"]);
            $hashedPassword = $this->passwordHasher->hashPassword(
                $new_user,
                $plaintextPassword
            );
            $new_user->setPassword($hashedPassword);
            $user_objects[] = $new_user;
            $manager->persist($new_user);
        }

        // TAGS
        $tags = ['Php', 'Javascript', 'Python', 'Symfony', 'Django', 'React', 'Actualité', 'Tutoriel', 'IA', 'Gestion de projet', 'Formation'];
        $tag_objects = [];
        foreach ($tags as $tag) {
            $new_tag = new Tag();
            $new_tag->setName($tag);
            $tag_objects[] = $new_tag;
            $manager->persist($new_tag);
        }

        // ARTICLES
        $articles = [
            [
                "title" => "Dave{x} la start-up qui décolle",
                "introduction" => "LES DAVE réunit les meilleurs développeurs et talents du digital. Une vision commune : l'excellence, un sens aiguisé du détail et la volonté de mener à bien les plus beaux projets. Une étoile du Nord : atteindre la perfection sans renoncer à la réactivité et adaptation indispensable à chaque projet.",
                "image" => "daveledev.jpeg",
                "content" => "Sur les réseaux sociaux, « Dave le développeur » est un personnage culte. Un jeune travailleur libre, heureux, intouchable, courtisé par toutes les entreprises qui se battent pour le recruter. Devenu un mème d’Internet, « Dave le dev », peut même se permettre de se moquer des dizaines d’offres d’emploi qui pleuvent sur lui tout au long de la journée. « C’est pas moi j’postule à ton offre, c’est ton offre elle postule à moi », dit-il ainsi en ouvrant le réseau social professionnel LinkedIn le matin, sur l’une des centaines d’images allégoriques qui circulent sur Facebook, Twitter, Instagram, LinkedIn, YouTube, Twitch et même le service de discussion Discord. Une référence au couplet culte de la chanson DKR du rappeur Booba (« C’est pas le quartier qui me quitte/C’est moi j’quitte le quartier »). Un dessin satirique, pas si loin de la réalité. Une pluie de messages de recruteurs, c’est aussi ce que reçoit Wilfried Evieux chaque semaine sur LinkedIn. Avec trois à quatre demandes par jour, ce développeur Web de 26 ans diplômé de l’école Supinfo Paris travaille aujourd’hui en free-lance. Alors qu’il était encore en formation, il a rapidement compris l’attrait que son profil avait pour les entreprises. Avec quelques années d’expérience à son compteur, les demandes affluent toujours plus. Même en spécifiant qu’il n’est pas en recherche d’emploi, les entreprises essaient constamment de le débaucher, à l’image de « Dave le dev ». Et pour cause, ce métier mal connu est aujourd’hui un pilier du Web. A partir d’un cahier des charges, le développeur analyse les besoins, choisit la solution technique la mieux adaptée et développe les fonctionnalités du site ou de l’application Web, en les codant. Un développeur débutant gagne un salaire annuel d’environ 32 000 à 48 000 euros annuels. Avec deux à cinq années d’expérience, la rémunération oscille entre 38 000 et 55 000 euros pour les profils confirmés. Si les développeurs ont des profils et des compétences qui attirent autant c’est que le numérique représente aujourd’hui 5,5 % du PIB français, chiffre qui pourrait doubler d’ici quelques années, selon une étude du cabinet McKinsey reprise par Bpifrance."
            ],
            [
                "title" => "Les développeurs Web, « rock stars » du marché de l’emploi, craignent de devenir les « ouvriers d’hier",
                "introduction" => "Toujours très convoités et choyés par les recruteurs, les développeurs Web considèrent que leur position avantageuse est arrivée à un point d’équilibre. Certains craignent de se laisser dépasser par l’intelligence artificielle et les évolutions technologiques.",
                "image" => "daveslesdevs.png",
                "content" => "Sur les réseaux sociaux, « Dave le développeur » est un personnage culte. Un jeune travailleur libre, heureux, intouchable, courtisé par toutes les entreprises qui se battent pour le recruter. Devenu un mème d’Internet, « Dave le dev », peut même se permettre de se moquer des dizaines d’offres d’emploi qui pleuvent sur lui tout au long de la journée. « C’est pas moi j’postule à ton offre, c’est ton offre elle postule à moi », dit-il ainsi en ouvrant le réseau social professionnel LinkedIn le matin, sur l’une des centaines d’images allégoriques qui circulent sur Facebook, Twitter, Instagram, LinkedIn, YouTube, Twitch et même le service de discussion Discord. Une référence au couplet culte de la chanson DKR du rappeur Booba (« C’est pas le quartier qui me quitte/C’est moi j’quitte le quartier »). Un dessin satirique, pas si loin de la réalité. Une pluie de messages de recruteurs, c’est aussi ce que reçoit Wilfried Evieux chaque semaine sur LinkedIn. Avec trois à quatre demandes par jour, ce développeur Web de 26 ans diplômé de l’école Supinfo Paris travaille aujourd’hui en free-lance. Alors qu’il était encore en formation, il a rapidement compris l’attrait que son profil avait pour les entreprises. Avec quelques années d’expérience à son compteur, les demandes affluent toujours plus. Même en spécifiant qu’il n’est pas en recherche d’emploi, les entreprises essaient constamment de le débaucher, à l’image de « Dave le dev ». Et pour cause, ce métier mal connu est aujourd’hui un pilier du Web. A partir d’un cahier des charges, le développeur analyse les besoins, choisit la solution technique la mieux adaptée et développe les fonctionnalités du site ou de l’application Web, en les codant. Un développeur débutant gagne un salaire annuel d’environ 32 000 à 48 000 euros annuels. Avec deux à cinq années d’expérience, la rémunération oscille entre 38 000 et 55 000 euros pour les profils confirmés. Si les développeurs ont des profils et des compétences qui attirent autant c’est que le numérique représente aujourd’hui 5,5 % du PIB français, chiffre qui pourrait doubler d’ici quelques années, selon une étude du cabinet McKinsey reprise par Bpifrance."
            ],
            [
                "title" => "Développeur web : 10 outils IA pour générer et corriger du code",
                "introduction" => "Le code généré par IA devient de plus en plus précis et les outils qui le permettent se diversifient. Simple assistant ou générateur de A à Z : découvrez notre sélection.",
                "image" => "AI-outils-code-developpeurs.jpg",
                "content" => "L’IA permet de générer du texte, des images, de la vidéo, du son. Mais également du code. En effet, de nombreux outils permettent de créer du code, l’expliquer, le corriger, l’optimiser, le compléter. Et leurs cibles sont variées : des développeurs débutants aux experts de leur domaine, en passant par ceux qui souhaitent simplement un assistant IA et ceux qui veulent pouvoir développer leur projet via l’IA de A à Z.<br><br>En cette journée mondiale des programmeurs et développeurs, nous vous proposons une sélection d’outils qui vous assisteront dans vos tâches de programmation et de développement grâce à l’intelligence artificielle !<br><br><span>1. GitHub Copilot</span><br><br>GitHub Copilot est un outil pour vous assister pendant que vous codez. Il peut vous suggérer des éléments d’autocomplétion lorsque vous commencez à rédiger du code, mais également répondre à vos requêtes textuelles qui décrivent ce que vous souhaitez que le code réalise comme action. Alimenté par un modèle d’IA générative conçu par GitHub, OpenAI et Microsoft, cet assistant IA est disponible en extension pour Visual Studio Code, Neovim, JetBrains, Azure Data Studio, et bien d’autres. GitHub Copilot comprend de nombreux langages de programmation, dont JavaScript qu’il maîtrise particulièrement bien, mais aussi C, C++, C#, PHP, Python, Ruby, etc.<br>En outre, une version actuellement nommée GitHub Copilot X est en cours de développement. Elle s’appuie sur GPT-4 et offre la possibilité, grâce à son chat et son terminal, de gérer les pull requests, corriger du code, le traduire, écrire des tests unitaires et fournir des réponses personnalisées à partir de la documentation.<br><br><span>2. Replit Ghostwriter</span><br><br>Replit Ghostwiter permet la génération de code, sa complétion, sa transformation, son amélioration, son décryptage ou son débogage. La liste des langages de programmation pris en charge n’est pas négligeable : Bash, C, C++, C#, CSS, Go, PHP, JavaScript, Java, PHP, Perl, Python, Ruby… Et la liste ne cesse de croître !Vous pourrez rapidement utiliser différents frameworks, API et langages, car Replit Ghostwriter propose un IDE en ligne. L’outil est ainsi particulièrement adapté aux codeurs en herbe, qui souhaitent s’initier à la programmation grâce au soutien et aux explications de l’intelligence artificielle.<br><br><span>3. Code Llama</span><br><br>Meta a lancé son modèle de langage open source destiné au code. Basé sur son grand modèle de langage Llama 2, Code Llama est spécialement conçu pour la programmation et le développement : il permet la génération de code et la production en langage naturel, en réponse à des requêtes en code ou en langage naturel. Sa flexibilité le rend adaptable à de nombreux langages de programmation, comme Python, C++, Java, PHP, C# ou encore Bash. D’ailleurs, Meta propose son outil en plusieurs versions spécifiques, dont une dédiée à Python et une autre affinée pour comprendre et générer des réponses en langage naturel à partir d’instructions. À noter que Code Llama est gratuit pour la recherche et l’usage commercial.<br><br><span>4. Tabnine</span><br><br>Si Tabnine n’est pas un générateur de code à proprement parler, c’est-à-dire end-to-end, il permet d’optimiser la fonction d’autocomplétion de votre IDE. Il est compatible avec plus de 20 langages de programmation et 15 éditeurs, dont VS Code, IntelliJ, Android Studio ou encore Vim. De plus, Tabnine propose une sécurité et une confidentialité adaptées pour les entreprises. Les contrôles offerts par chaque solution garantissent que le code reste sûr, privé et sécurisé.<br><br><span>5. CodeT5</span><br><br>CodeT5 est un modèle de langage de programmation open source développé par Salesforce. Il se base sur le principe T5 (text-to-text transfer transformer) de Google. Il comprend un grand nombre de data sets, l’équipe ayant extrait plus de 8 millions d’instances de code accessibles au grand public depuis GitHub. Ainsi, CodeT5 permet de générer du code à partir de descriptions en langage naturel. Il dispose également de capacités d’autocomplétion et de synthèse, permettant le résumé d’une fonction en langage naturel.<br><br><span>6. CodeGPT</span><br><br>CodeGPT est une extension tierce développée pour VS Code. Grâce à votre propre clé API, vous pourrez utiliser les modèles GPT, dont GPT-4, au sein de votre application. Avec cet outil, vous allez pouvoir générer du code, sélectionner des extraits pour que l’IA en explique la fonction, dénicher des erreurs ou des problèmes, trouver des solutions ou encore retoucher votre code. 16 langages de programmation sont pris en compte et il vous sera possible de lier l’outil à d’autres API de services d’IA, comme HuggingFace ou Anthropic par exemple.<br><br><span>7. Amazon CodeWhisperer</span><br><br>Amazon s’est également lancé dans la course à l’IA et propose un outil dédié à la programmation : CodeWhisperer. En rédigeant une requête, vous allez pouvoir obtenir des fonctions complètes basées sur votre code. L’outil peut également analyser votre code pour mettre en évidence d’éventuelles vulnérabilités. Mais surtout, CodeWhisperer peut être utilisé dans de nombreux IDE, comme VS Code, IntelliJ et d’autres, tout en prenant en charge plusieurs langages de programmation comme Python, JavaScript, Typescript, C#, entre autres.<br><br><span>8. GPT Engineer</span><br><br>Projet open source, Code Engineer est une IA similaire à Auto-GPT, qui vous permet de construire l’ensemble de la base de code d’un projet. En utilisant une API GPT, vous allez pouvoir décrire à l’outil ce que vous voulez faire. Puis, l’IA vous posera des questions sur votre projet et commencera sa construction. De fait, Code Engineer a la capacité de concevoir des applications complètes, en fournissant simplement une série d’instructions.<br><br><span>9. ChatGPT</span><br><br>On ne présente plus ChatGPT, dont l’actuel modèle, GPT-4, présente d’excellentes compétences de code. L’outil d’OpenAI permet de générer, expliquer, déboguer et corriger du code, tout en l’expliquant. Il s’agit, selon HumanEval, de la meilleure IA pour coder avec Python, ce qui en fait un excellent outil pour les développeurs débutants comme pour les experts. De plus, avec l’abonnement ChatGPT Plus, vous disposerez non seulement de GPT-4 et de son API, mais également du plugin Code Interpreter, qui vous permet d’analyser et d’interpréter des lignes de codes.<br><br><span>10. Google Bard</span><br><br>Chatbot généraliste, Google Bard montre de très bonnes capacités en termes de génération de code. Le modèle PaLM 2 permet la prise en charge de plus de 20 langages de programmation, dont Python, C, C++, JavaScript, etc. Mais Bard peut également traduire du code, l’exécuter, et vous donne la possibilité d’exporter la production directement dans Google Colab. L’IA pourra aussi résoudre des bugs, expliquer des extraits de code ou demander l’écriture de fonctions pour Google Sheets."
            ],
            [
                "title" => "Comment traduire son site web : conseils et outils",
                "introduction" => "Mettre en ligne un site multilingue permet de s’ouvrir à de nouvelles opportunités, mais traduire son site web nécessite d’opter pour les bons outils.",
                "image" => "Elements-a-traduire-sur-votre-site-web.jpg",
                "content" => "La traduction d’un site web peut revêtir une importance cruciale pour atteindre un public international et diversifié. Entreprises, indépendants, créateurs de contenu, tous peuvent trouver des avantages dans le fait de localiser leur site, qui peut permettre de s’ouvrir à de nouvelles opportunités, notamment commerciales, et de renforcer leur présence sur le marché mondial. Découvrez pourquoi il peut être judicieux de traduire votre site web, ainsi que des conseils et outils pour ce faire.<br><br><br><span>Quels sont les avantages d’avoir un site web traduit en plusieurs langues ?</span><br><br>Internationaliser votre site web en le traduisant en plusieurs langues peut offrir de nombreux avantages, autant sur votre notoriété et celle de votre marque que pour toucher une audience différente et de nouveaux marchés.<br><br><b>1. Expansion du public cible : </b>traduire votre site web permet d’atteindre un public plus large. Les utilisateurs préfèrent généralement naviguer et effectuer d’éventuels achats en utilisant leur langue maternelle. En proposant votre contenu en plusieurs langues, vous pouvez supprimer les barrières linguistiques et créer un lien particulier avec votre audience.<br><b>2. Amélioration de la crédibilité : </b>un site traduit transmet un message de professionnalisme et de souci du détail. Les internautes sont plus susceptibles de faire confiance à un site proposant du contenu dans leur langue, car cela démontre que vous comprenez leurs besoins et leurs attentes, tout en étant prêt à leur fournir une expérience personnalisée.<br><b>3. Expansion vers de nouveaux marchés : </b>la traduction de votre contenu peut vous permettre d’explorer de nouveaux marchés internationaux. Chacun d’entre eux a ses propres préférences culturelles et comportementales, et l’adaptation de votre site à ces spécificités locales peut augmenter vos chances de réussite dans une région donnée.<br><b>4. Amélioration du référencement : </b>traduire votre site web peut également avoir des répercussions positives sur votre référencement naturel. En ciblant les mots clés dans différentes langues, il est possible de se classer plus haut sur les moteurs de recherche dans ces langues spécifiques. Votre visibilité auprès des utilisateurs cherchant des informations dans leur langue n’en sera qu’accrue.<br><br><br><span>Conseils et outils pour traduire votre site web</span><br><br>Avant de traduire votre site web, il est important d’effectuer un travail de recherche et de balisage de votre projet. Et ce, afin de n’oublier aucun détail. Parallèlement, il convient de s’équiper des bons outils et de choisir sa méthode de traduction.<br><br><b>Baliser son projet : </b>il n’y a pas que le contenu publié sur votre site qui doit être traduit. Les boutons, meta-descriptions, mots clés, footer, balises alt, pop-ups, messages d’erreur, descriptions des images, newsletter, vidéos (etc.) doivent faire l’objet d’une traduction. Il est donc important de faire au préalable un état des lieux des besoins de votre site en termes de traduction.<br><br><strong>Plusieurs conseils pour une traduction efficace</strong><br><br><b>Comprendre son public cible : </b>avant de débuter la traduction, il est nécessaire de comprendre les préférences, les nuances culturelles et les besoins de votre potentielle audience dans chaque langue. Il peut être intéressant de consulter des natifs pour éviter toute incompréhension ou bévue. Prenez également en compte le fait que certaines langues sont parlées différemment selon les locuteurs. De la même manière, il peut être judicieux de prévoir un bouton sur votre site permettant de rapidement changer de langue, notamment pour des pays multiculturels.<b>Penser aux URL et aux fichiers de langue : </b>il existe plusieurs possibilités pour les noms de domaine. Certains sites optent pour les habituels .fr, .es, .uk, quand d’autres préfèrent créer des sous-domaines comme fr.monsite.com ou es.monsite.com. Il est aussi possible d’opter pour le sous-répertoire tel que monsite.com/fr, monsite.com/es, etc. Enfin, pensez à placer des balises de contenu pour créer des fichiers de langue, afin que Google ne considère vos différentes versions comme des doublons.<br><br><strong>Quelle méthode et quels outils choisir pour traduire son site web ?</strong><br><br>Pour faciliter la traduction d’un site web, il existe plusieurs solutions :<br><b>1. Les plugins et API des plateformes de traduction : </b>certains plateformes de gestion de contenu disposent de plugins permettant des traductions automatiques. Des outils mettent aussi à disposition des API pour connecter votre système (CMS, PIM, etc.) à leur service de traduction en ligne.<br><b>2. Les mémoires de traduction : </b>ces outils enregistrent les traductions précédentes et des segments de texte traduits pour les réutiliser dans des traductions futures. Ils permettent ainsi d’assurer la cohérence et de proposer à un traducteur humain des extraits déjà traduits, réduisant ainsi le volume de contenu à localiser.<br><b>3. La traduction automatique relue : </b>aussi appelée « post-edited machine translation », cette méthode associe l’entraînement de moteurs de traduction automatique et les compétences humaines. Les textes pré-traduits sont relus et adaptés par les traducteurs humains.<br><b>4. Les services de traduction : </b>des services en ligne ou des logiciels dédiés permettent de vous aider dans vos efforts de traduction et de gestion de contenu, qu’ils soient totalement automatisés, réalisés en partie ou totalement par des humains, de manière collaborative ou non.<br>"
            ],
            [
                "title" => "Chef de projet web : 10 conseils pour bien s’organiser",
                "introduction" => "L’organisation est l’un des points essentiels pour gérer efficacement ses projets. Découvrez nos conseils et outils pour aider les chefs de projet web à bien s’organiser.",
                "image" => "gestion_projet_web.jpg",
                "content" => "<span>L’organisation, clé de la réussite d’un chef de projet web</span><br><br>L’organisation est la pierre angulaire du travail de tout chef de projet web. Réfléchie en amont, elle permet une gestion fluide et efficace de vos projets. En définissant clairement les objectifs, en établissant un calendrier réaliste et en attribuant des tâches spécifiques aux membres de votre équipe, vous vous assurerez une répartition équilibrée des responsabilités.<br><br>La mise en place d’outils de gestion de projet peut grandement faciliter le suivi de l’avancement de vos projets et renforce la collaboration entre les membres de votre équipe. De plus, une bonne organisation peut vous aider à anticiper les risques, optimiser les délais et répondre efficacement aux imprévus. Découvrez nos conseils et outils pour bien s’organiser en tant que chef de projet !<br><br><span>10 conseils pour bien s’organiser en tant que chef de projet</span><br><br><br>Voici 10 conseils qui peuvent vous aider à optimiser vos workflows et garder le contrôle de A à Z sur vos projets :<br><br><b>1. Définir clairement les objectifs : </b>il est recommandé, en amont, de s’assurer d’avoir une vision claire de votre projet et de ses objectifs, ainsi que des livrables attendus. Cela vous permet de mieux planifier les différentes étapes à suivre.<br><br><b>2. Établir un calendrier et des échéances : </b>créer un calendrier détaillé avec les principales étapes du projet et les dates limites qui y sont associées est une phase importante de votre projet. Il est par ailleurs judicieux de veiller à être réaliste dans vos délais, en prévoyant notamment une certaine marge de manœuvre pour gérer d’éventuels imprévus.<br><br><b>3. Identifier les tâches et les responsabilités : </b>il est important de diviser votre projet en plusieurs tâches et de les assigner à des membres spécifiques de votre équipe en fonction de leurs compétences et de leurs rôles, permettant ainsi de clairement identifier les responsabilités de chacun.<br><br><b>4. Favoriser la communication : </b><br>en établissant un environnement propice à une communication ouverte et régulière entre tous les membres travaillant sur un même projet, il vous sera plus facile de résoudre rapidement les problèmes et renforcer la collaboration. De nombreux outils permettent la mise en place d’un tel espace.<br><br><b>5. Organiser des réunions régulières : </b>favoriser la communication ne se limite pas à la mise en place d’outils pour ce faire. En effet, il est judicieux d’organiser, en tant que chef de projet, des réunions et points réguliers afin de discuter de l’avancement du projet, des problèmes rencontrés et des prochaines échéances.<br><br><b>6. Prioriser les tâches : </b>avec des outils de gestion de projet, vous allez pouvoir organiser facilement les étapes importantes en déterminant des tâches critiques à réaliser en priorité. En concentrant les efforts de vos collaborateurs sur celles-ci en premier lieu, vous favoriserez la bonne progression du projet.<br><br><b>7. Gérer les risques : </b>si votre projet comporte des risques pouvant être bloquants ou qui pourraient mettre à mal la bonne tenue des délais, il peut être judicieux de les anticiper en mettant en place des plans d’atténuation. Cela vous permettra d’y faire face plus rapidement et de les traiter plus efficacement.<br><br><b>8. Encourager la collaboration : </b>il est important que vos collaborateurs ne se sentent pas restreints dans l’expression de leurs idées, leurs doutes, leurs interrogations. Ils peuvent être force de proposition et permettre d’optimiser des workflows, être porteurs d’innovation grâce à une collaboration efficace.<br><br><b>9. Suivre l’avancement du projet : </b>en mettant en place un système de suivi régulier, vous aurez la possibilité d’évaluer les progrès accomplis par rapport aux objectifs définis, ce qui vous aidera à identifier d’éventuels retards et à prendre des mesures correctives rapidement.<br><br><b>10. S’adapter aux changements : </b>il est important de savoir être flexible et préparé à ajuster votre plan en cours de route. Les projets web peuvent rapidement évoluer et le rendu final n’est pas forcément ce que vous aviez initialement imaginé, il est donc nécessaire de savoir s’adapter aux changements, tout en gardant le cap sur les objectifs fixés.<br><br>L’application de ces points clés peut sembler fastidieuse. Heureusement, il existe de nombreux outils qui peuvent vous accompagner dans la gestion de vos projets, en proposant des fonctionnalités allant de l’organisation des tâches à leur attribution, tout en offrant des moyens de communication et de collaboration intégrés."
            ],
            [
                "title" => "5 compétences indispensables pour devenir développeur web",
                "introduction" => "Découvrez les hard et soft skills à maîtriser pour faire carrière dans le développement informatique.",
                "image" => "competences-indispensables-developpeur-web.jpg",
                "content" => "Vous souhaitez vous former ou vous reconvertir en tant que développeur web ou mobile ? Vous pouvez vous orienter vers différentes spécialisations : le front-end (la partie visible d’un site et les éléments avec lesquels interagissent les utilisateurs), le back-end (la partie technique nécessaire au bon fonctionnement du site ou de l’application mobile) ou le développement full stack (la gestion de l’ensemble des étapes, front-end et back-end inclus). Vous avez également la possibilité de vous orienter vers l’approche DevOps, qui mêle le développement logiciel avec les opérations d’infrastructure.<br><br>Quel que soit votre choix, des hard et soft skills spécifiques vous seront demandées pour exercer le métier de développeur web , qui est un profil particulièrement recherché en ce moment par les recruteurs. Tour d’horizon des principales compétences clés à maîtriser pour réussir dans ce domaine.<br><br><span>1. La maîtrise des langages de programmation</span><br><br>Selon le dernier classement de l’index TIOBE, qui publie chaque mois la liste des langages les plus recherchés sur Internet, on retrouve en tête Python, couronné en 2021 et accessible même pour les débutants, devant C et Java, qui reste talonné par C++. Un peu plus loin, on retrouve d’autres langages de programmation incontournables dans le développement informatique, tels que JavaScript (7e), PHP (10e) ou encore Swift (16e) pour la création d’applications iOS.<br><br>Si HTML et CSS ne sont pas considérés comme des langages de programmation à proprement parler, ils sont essentiels à connaître, tout comme les frameworks tels que React ou Angular, les environnements informatiques (Windows, Linux, iOS, Android), mais aussi les bases de données SQL ou noSQL. Ces différentes compétences vous serviront non seulement si vous souhaitez devenir développeur web, mais aussi si vous désirez évoluer par la suite vers d’autres branches de l’informatique, comme la data science, le machine learning ou l’intelligence artificielle.<br><br><span>2. Une bonne compréhension des métiers connexes</span><br><br>Si le développeur web peut réaliser un certain nombre de tâches de manière autonome, il ne travaille généralement pas seul. Son rôle central au sein des projets de développement informatique lui confère un lien privilégié entre les différents métiers avec lesquels il collabore : chef de projet / chef de produit, webdesigners, intégrateur web, rédacteur web, experts SEO…<br><br>Pour mieux appréhender les problématiques de chacun et faciliter les échanges entre les équipes, il est ainsi recommandé d’acquérir des notions dans des domaines connexes au développement web, notamment en UX design, pour être en mesure de créer un site ou une app mobile qui répondra aux besoins des utilisateurs, mais aussi le référencement. Ces connaissances apporteront de la crédibilité au développeur web et lui feront gagner du temps en comprenant mieux les demandes de ses interlocuteurs.<br><br><span>3. Un apprentissage continu tout au long de sa carrière</span>Le digital est un secteur qui progresse rapidement, grâce aux nombreuses innovations mises en place par les startups et les différents acteurs. Face à ces évolutions technologiques, les développeurs web doivent rester à jour en réalisant une veille technique constante pour s’adapter et les prendre en compte dans leurs tâches au quotidien. Ils ont aussi la possibilité de se former tout au long de leur carrière professionnelle pour monter en compétences sur d’autres domaines (IA, cloud, data…).<br><br>Vous souhaitez mettre à jour vos connaissances en développement informatique, acquérir de nouvelles hard et soft skills ou vous reconvertir dans ce secteur ? De nombreux organismes vous permettent d’acquérir les compétences indispensables pour exercer cette profession passionnante et indispensable du digital.<br><br><span>4. L’esprit d’analyse pour trouver des solutions aux problèmes</span><br><br>Parmi les missions du développeur web, ce dernier est aussi amené à résoudre les problèmes remontés par les utilisateurs des interfaces qu’il conçoit. Son esprit d’analyse va lui permettre de comprendre le besoin, d’effectuer les recherches nécessaires avec l’objectif de trouver, puis de mettre en place une solution afin d’y répondre. En fonction de sa nature, le problème à corriger pourra, le cas échéant, être divisé en plusieurs tâches à réaliser avant de mettre en production une mise à jour ou un correctif.<span>5. Une bonne communication, de la rigueur et de la réactivité<br><br>En plus de ces hard skills, le développeur web doit aussi faire preuve de qualités humaines, qui lui permettront de faire carrière et de se démarquer à son poste. Comme nous l’avons vu précédemment, un bon sens de la communication et le goût pour le travail en équipe sont primordiaux dans cette profession, car ce dernier va échanger régulièrement avec d’autres collaborateurs de son entreprise, voire être en relation directe avec des clients.<br><br>Parmi les autres soft skills requises, on peut aussi noter la rigueur, la curiosité et la réactivité, mais aussi l’adaptabilité face au changement. Toutes représentent autant de qualités indispensables à maîtriser et qui seront fortement appréciées dans le cadre d’un recrutement."
            ],
            [
                "title" => "Reconversion dans le développement web : les langages informatiques à maîtriser",
                "introduction" => "Quels sont les langages de programmation les plus populaires et ceux que vous devez maîtriser si vous souhaitez vous reconvertir dans le développement informatique ?  ",
                "image" => "Programming-Language-Popularity.jpg",
                "content" => "Alors que la digitalisation touche tous les domaines, le métier de développeur web est actuellement très recherché par les entreprises, qui ont besoin d’être accompagnées dans leurs projets. « Son rôle consiste à développer des sites, des boutiques en ligne, des applications mobiles, ou encore des applications métiers comme des logiciels SaaS (Software As A Service) », explique Christian Meneux, formateur en développement web et web mobile chez Nextformation, l’école de la reconversion professionnelle dans les métiers de l’informatique.<br><br><br><span>Les principaux langages de programmation à connaître en 2022</span><br><br>Quel que soit son statut (salarié, freelance), la taille et le type de structure pour laquelle il travaille, ou son secteur d’activité, le développeur web doit maîtriser les langages de programmation pour concevoir des applications web et mobiles.<br><br><b>Python, le langage le plus recherché sur le web</b><br><br>D’après l’index TIOBE qui répertorie les langages de programmation les plus recherchés en ligne, Python, qui a déjà été désigné langage de l’année 2021, figure en tête du classement d’août 2022, devant C, Java et C++. À eux 4, ils représentent plus de 50 % des recherches Internet du mois. S’il est bien parti pour être titré cette année encore, Python est un langage facile à apprendre. Il est accessible aux développeurs même débutants, et permet aux plus expérimentés de coder rapidement, afin de créer des sites, développer des logiciels ou encore d’automatiser des scripts. Il est mis à jour régulièrement et bénéficie d’une communauté très active.<br><br><b>L’importance de maîtriser JavaScript, PHP, React ou encore Symfony</b><br><br>Pour Christian Meneux, en dehors de HTML et de CSS, les principaux langages à maîtriser en 2022 sont JavaScript et les frameworks associés, tels que React (la bibliothèque JavaScript open source développée par Facebook, qui permet de construire des interfaces utilisateurs pour des applications comportant une seule page) ou React Native, mais aussi NodeJs et PHP. « Les développeurs reçoivent de nombreuses demandes pour du PHP, et des projets en JavaScript de la part des startups. » Un constat partagé par Jérôme Bastaraud-Sopha, développeur web full stack freelance spécialisé en React et Symfony, qui a suivi le cursus de Nextformation : « j’utilise généralement le framework PHP Symfony pour réaliser la partie back-end des projets que je développe, et React pour le front-end ». À noter que WordPress, le CMS utilisé par 43 % des sites dans le monde, est écrit majoritairement en PHP.<br><br><b>Les langages en progression et ceux en déclin</b><br><br>Si JavaScript reste le langage de programmation le plus couramment utilisé par les développeurs pour la 10e année consécutive, selon l’étude menée par Stack Overflow, les développeurs doivent rester en veille constante pour se tenir au courant de leur évolution, pour connaître ceux qui sont en progression et ceux sur le déclin. « Certains langages comme Java Android ou Objective-C pour les applications d’Apple sont peu à peu remplacés par Fushia et Swift. On remarque aussi que la version open source du framework de Microsoft ASP.NET est actuellement privilégiée », ajoute le formateur.<br><br><br><span>Les avantages de se reconvertir en tant que développeur web</span><br><br>La profession de développeur web, qui bénéficie d’une insertion rapide sur le marché du travail, offre de belles opportunités à toutes celles et ceux qui envisagent de se lancer dans un projet de reconversion professionnelle. « C’est un métier passionnant qui évolue rapidement. Il permet d’obtenir un salaire attractif et de la flexibilité sur certains postes avec le full remote. Vous intervenez sur des sujets variés selon le type d’organisation qui fait appel à vous ou pour lequel vous travaillez. »<br><br>Hors freelance, la rémunération des développeurs s’élève à 32 100 € bruts annuels de 0 à 2 ans d’expérience, pour atteindre plus de 50 800 € pour les profils seniors (plus de 10 ans d’expérience), selon l’Association Française des Utilisateurs de PHP (AFUP). Vous pouvez aussi faire le choix de devenir indépendant et de facturer vos projets à vos clients selon un tarif journalier. D’après l’étude de Hays, le taux journalier moyen pour un développeur web junior (0-3 ans d’expérience) est de 450 €. Comptez jusqu’à 650 € pour un développeur senior (plus de 8 ans d’expérience).<br><br>Parmi les autres avantages de se reconvertir en tant que développeur web : le secteur étant en perpétuelle évolution, vous apprendrez tout au long de votre carrière professionnelle. Et vous avez également la possibilité de vous diriger ensuite vers des postes à plus forte responsabilité, comme lead développeur, ou vous spécialiser sur une technologie.<br><br><br><span>Une formation professionnalisante pour répondre aux besoins des entreprises</span><br><br>Nextformation propose la formation développeur web pour apprendre les fondamentaux du codage informatique, la programmation, le front-end ainsi que le back-end. Elle s’adresse aux personnes en reconversion, mais aussi à celles et ceux souhaitant monter en compétences dans ce domaine. « Notre programme se distingue par la variété des langages abordés, des mises en situation à travers la réalisation d’un projet professionnel qui reprend les étapes de production d’une application web (rédaction du cahier des charges, modélisation de base de données, etc.) et qui est calquée sur la réalité du terrain », souligne Christian Meneux. Il vous permet d’obtenir le titre RNCP « développeur web et web mobile » de niveau 5 (bac+2).<br><br>Le cursus de Nextformation est enseigné par des formateurs professionnels experts en développement informatique. « On a la chance en tant qu’apprenant d’être entouré par des formateurs qualifiés, qui ont une envie de transmettre leurs expériences et leurs connaissances. Je suis resté en contact avec certains d’entre eux plusieurs mois après l’obtention de mon titre, ils répondent toujours présents », confie Jérôme Bastaraud-Sopha. À l’issue des 6 mois de cours, vous réalisez un stage de 2 mois en entreprise pour mettre en pratique vos connaissances et renforcer ainsi votre employabilité. La formation est éligible aux différents dispositifs de financement pour vous aider à réaliser votre projet de reconversion : CPF, CPF de transition professionnelle, plan de développement des compétences, aide individuelle à la formation…"
            ],
        ];

        foreach ($articles as $article) {
            $new_article = new Article;
            $new_article->setTitle($article["title"]);
            $new_article->setIntroduction($article["introduction"]);
            $new_article->setImage($article["image"]);
            $new_article->setContent($article["content"]);
            $new_article->setAuthor($user_objects[0]);

            $number_of_tags = random_int(1, 6);
            $article_tags = [];
            for ($i = 0 ; $i < $number_of_tags ; $i++) {
                $random_tag = $tag_objects[random_int(1, count($tag_objects)-1)];
                if (!in_array($random_tag, $article_tags)) {
                    $article_tags[] = $random_tag;
                    $new_article->addTag($random_tag);
                }
            }

            $manager->persist($new_article);
        }

        $manager->flush();
    }
}
